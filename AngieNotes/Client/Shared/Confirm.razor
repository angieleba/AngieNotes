@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" style="z-index:7000;" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@ConfirmationTitle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                            @onclick="() => OnConfirmationChange(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @ConfirmationMessage
                </div>
                <div class="modal-footer">
                    <MudButton OnClick="() => OnConfirmationChange(false)" Variant="Variant.Filled" Class="ml-2 mb-1" Color="Color.Default">Close</MudButton>
                    <MudButton OnClick="() => OnConfirmationChange(true)" Variant="Variant.Filled" Class="ml-2 mb-1" Color="Color.Success">Confirm</MudButton>
                </div>
            </div>
        </div>
    </div>
}

@code {
        protected bool ShowConfirmation { get; set; }

        [Parameter]
        [EditorRequired]
        public string ConfirmationTitle { get; set; } 

        [Parameter]
        [EditorRequired]
        public string ConfirmationMessage { get; set; } 

        public void Show()
        {
            ShowConfirmation = true;
            StateHasChanged();
        }

        [Parameter]
        public EventCallback<bool> ConfirmationChanged { get; set; }

        protected async Task OnConfirmationChange(bool value)
        {
            ShowConfirmation = false;
            await ConfirmationChanged.InvokeAsync(value);
        }
}
